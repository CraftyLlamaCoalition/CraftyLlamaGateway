// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package sqlcDB

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createNote = `-- name: CreateNote :one
INSERT INTO notes (
    createdBy,
    content
) VALUES (
    $1,
    $2
)
RETURNING id, createdby, createdat, updatedat, content, llmresp
`

type CreateNoteParams struct {
	Createdby string
	Content   string
}

func (q *Queries) CreateNote(ctx context.Context, arg CreateNoteParams) (Note, error) {
	row := q.db.QueryRow(ctx, createNote, arg.Createdby, arg.Content)
	var i Note
	err := row.Scan(
		&i.ID,
		&i.Createdby,
		&i.Createdat,
		&i.Updatedat,
		&i.Content,
		&i.Llmresp,
	)
	return i, err
}

const deleteNote = `-- name: DeleteNote :exec
DELETE FROM notes
WHERE id = $1
`

func (q *Queries) DeleteNote(ctx context.Context, id int32) error {
	_, err := q.db.Exec(ctx, deleteNote, id)
	return err
}

const getNote = `-- name: GetNote :one
SELECT id, createdby, createdat, updatedat, content, llmresp FROM notes
WHERE id = $1 limit 1
`

func (q *Queries) GetNote(ctx context.Context, id int32) (Note, error) {
	row := q.db.QueryRow(ctx, getNote, id)
	var i Note
	err := row.Scan(
		&i.ID,
		&i.Createdby,
		&i.Createdat,
		&i.Updatedat,
		&i.Content,
		&i.Llmresp,
	)
	return i, err
}

const updateLLMResp = `-- name: UpdateLLMResp :one
UPDATE notes
    set llmResp = $2,
    updatedAt = CURRENT_TIMESTAMP
WHERE id = $1
RETURNING id, createdby, createdat, updatedat, content, llmresp
`

type UpdateLLMRespParams struct {
	ID      int32
	Llmresp pgtype.Text
}

func (q *Queries) UpdateLLMResp(ctx context.Context, arg UpdateLLMRespParams) (Note, error) {
	row := q.db.QueryRow(ctx, updateLLMResp, arg.ID, arg.Llmresp)
	var i Note
	err := row.Scan(
		&i.ID,
		&i.Createdby,
		&i.Createdat,
		&i.Updatedat,
		&i.Content,
		&i.Llmresp,
	)
	return i, err
}
